//
//  ViewController.swift
//  Sample-SVProgressHUD
//
//  Created by NishiokaKohei on 2017/09/18.
//  Copyright ¬© 2017Âπ¥ Kohey. All rights reserved.
//

import UIKit
import Foundation
import SVProgressHUD

class ViewController: UIViewController {

    // MARK: - Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }


    // MARK: - IBActions

    ///
    /// Display Status: „Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫„ÅÇ„Çä
    ///
    @IBAction func willBeginSomething(_ sender: UIButton) {
        // „Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫„ÅÇ„Çä
        SVProgressHUD.show(withStatus: "processing ...")

        // ÔºìÁßíÂæå„Å´Èñâ„Åò„Çã
        let t = DispatchTime.now() + DispatchTimeInterval.seconds(3)
        DispatchQueue.global(qos: .default).asyncAfter(deadline: t) {
            SVProgressHUD.dismiss()
        }
    }

    ///
    /// No Status: „Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫„Å™„Åó
    ///
    @IBAction func willBeginSomethingWithStatus(_ sender: UIButton) {
        // „Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫„Å™„Åó
        SVProgressHUD.show()

        // ÔºìÁßíÂæå„Å´Èñâ„Åò„Çã
        let t = DispatchTime.now() + DispatchTimeInterval.seconds(3)
        DispatchQueue.global(qos: .default).asyncAfter(deadline: t) {
            SVProgressHUD.dismiss()
        }
    }

    ///
    /// Progress Status: ÈÄ≤Êçó„Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫„ÅÇ„Çä
    ///
    @IBAction func willFinishWhile(_ sender: UIButton) {
        SVProgressHUD.show(withStatus: "processing ...")

        let t = DispatchTime.now() + DispatchTimeInterval.seconds(2)
        let one = DispatchTimeInterval.seconds(1)
        DispatchQueue.global(qos: .default).asyncAfter(deadline: t) {
            DispatchQueue.global(qos: .default).sync {
                SVProgressHUD.showProgress(0.5, status: "„Åç„Åü„Åç„Åü„ÉºüòÅÔºÅÔºÅ 50%")

                DispatchQueue.global(qos: .default).asyncAfter(deadline: .now() + one) {
                    SVProgressHUD.showProgress(0.8, status: "„Åù„Çç„Åù„Ççü§óÔºÅ 80%")

                    DispatchQueue.global(qos: .default).asyncAfter(deadline: .now() + one) {
                        let d_one = TimeInterval(1)
                        SVProgressHUD.dismiss(withDelay: d_one)
                    }
                }
            }
        }
    }

    ///
    /// Error Status: Â§±Êïó„ÇÑ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åü„Å®„Åç
    ///
    @IBAction func willShowError(_ sender: UIButton) {
        SVProgressHUD.show(withStatus: "processing ...")

        let t = DispatchTime.now() + DispatchTimeInterval.seconds(3)
        DispatchQueue.global(qos: .default).asyncAfter(deadline: t) {
            SVProgressHUD.showError(withStatus: "Oh, My GOD !!")

            let d_one = TimeInterval(1)
            SVProgressHUD.dismiss(withDelay: d_one)
        }
    }

    ///
    /// Success Status: ÊàêÂäü„Åó„Åü„Å®„Åç
    ///
    @IBAction func willShowSuccess(_ sender: UIButton) {
        SVProgressHUD.show(withStatus: "processing ...")

        let t = DispatchTime.now() + DispatchTimeInterval.seconds(3)
        DispatchQueue.global(qos: .default).asyncAfter(deadline: t) {
            SVProgressHUD.showSuccess(withStatus: "Doneüéâ")

            let d_one = TimeInterval(1)
            SVProgressHUD.dismiss(withDelay: d_one)
        }
    }

    ///
    /// Info Status: ÊàêÂäü„Åó„Åü„Å®„Åç
    ///
    @IBAction func willShowInfo(_ sender: UIButton) {
        SVProgressHUD.show(withStatus: "processing ...")

        let t = DispatchTime.now() + DispatchTimeInterval.seconds(3)
        DispatchQueue.global(qos: .default).asyncAfter(deadline: t) {
            SVProgressHUD.showInfo(withStatus: "Something is ...")

            let d_one = TimeInterval(1)
            SVProgressHUD.dismiss(withDelay: d_one)
        }
    }


    ///
    /// „Çø„Çπ„ÇØÂÆå‰∫ÜÂæå„Å´Èñâ„Åò„Çã
    ///
    @IBAction func willFinishAfterAnyTasks(_ sender: UIButton) {
        DispatchQueue.global(qos: .default).async {
            // TODO: time-consuming task

            DispatchQueue.main.async {
                SVProgressHUD.dismiss()
            }
        }
    }

    @IBAction func willFinishSomething(_ sender: UIButton) {
        // TODO: Event
    }

}

